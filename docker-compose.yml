networks:
  sds_network:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - eido_api
      - idx_api
      - llm_geocoding_service
    networks:
      - sds_network

  eido_db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: eido_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sds_network

  eido_api:
    build:
      context: ../eido-agent
      args:
        - DATABASE_URL=postgresql://user:password@eido_db/eido_db
        - GEMINI_API_KEY=${GEMINI_API_KEY}
    command: ["api"]
    volumes:
      - ../eido-agent:/app
    depends_on:
      - eido_db
    environment:
      DATABASE_URL: "postgresql://user:password@eido_db/eido_db"
      GOOGLE_API_KEY: "${GEMINI_API_KEY}"
      GEOCODING_USER_AGENT: "SDSC-Orchestrator/1.0 (contact: klh005@ucsd.edu)"
    env_file:
      - ../idx-agent/.env
    networks:
      - sds_network

  idx_api:
    build:
      context: ../idx-agent
    command: [ "api" ]
    env_file:
      - ../idx-agent/.env
    environment:
      API_HOST: 0.0.0.0
      API_PORT: 8001
      DOCKER_ENV: true
    volumes:
      - ../idx-agent/data:/app/data
    networks:
      - sds_network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8002/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  llm_geocoding_service:
    build:
      context: ../llm-geocoding-service
    command: uvicorn api.main:app --host 0.0.0.0 --port 8005
    volumes:
      - ../llm-geocoding-service:/app
    networks:
      - sds_network

  geocoding_service:
    build:
      context: ../llm-geocoding-service
    command: uvicorn main:app --host 0.0.0.0 --port 8005
    ports:
      - "8005:8005"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    networks:
      - sds_network

  realtime_alerts:
    build:
      context: ../realtime-alert-system
    command: uvicorn main:app --host 0.0.0.0 --port 8006
    ports:
      - "8006:8006"
    depends_on:
      - eido_db
      - redis
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@eido_db/eido_db
      - REDIS_URL=redis://redis:6379
    networks:
      - sds_network

  psap_coordinator:
    build:
      context: ../cross-psap-coordinator
    command: uvicorn main:app --host 0.0.0.0 --port 8007
    ports:
      - "8007:8007"
    depends_on:
      - eido_db
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@eido_db/eido_db
    networks:
      - sds_network

  duplicate_responder:
    build:
      context: ../duplicate-incident-responder
    command: uvicorn main:app --host 0.0.0.0 --port 8008
    ports:
      - "8008:8008"
    depends_on:
      - eido_db
      - redis
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@eido_db/eido_db
      - REDIS_URL=redis://redis:6379
    networks:
      - sds_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - sds_network

volumes:
  postgres_data: